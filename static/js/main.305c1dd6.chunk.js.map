{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","findByIdFromArray","searchArray","searchedId","find","products","categoryId","map","product","category","categoriesFromServer","user","usersFromServer","owner","App","useState","selectedUserFilter","setSelectedUserFilter","query","setQuery","selectedCategories","setSelectedCategories","productsFilteredByOwner","filter","productsFilteredByProductName","normalizedProductName","toLowerCase","normalizedInput","trim","includes","productsToShow","length","className","href","classNames","onClick","type","placeholder","value","onChange","event","target","current","ReactDOM","render","document","getElementById"],"mappings":"+QAAe,GACb,CAAEA,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,KAC5B,CAAEF,GAAI,EAAGC,KAAM,MAAOC,IAAK,KAC3B,CAAEF,GAAI,EAAGC,KAAM,OAAQC,IAAK,MCJf,GACb,CACEF,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,SACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,cACPC,KAAM,eACNC,QAAS,GAEX,CACEL,GAAI,EACJG,MAAO,UACPC,KAAM,eACNC,QAAS,I,OCrBPC,EAAoB,SAACC,EAAaC,GAAd,OACxBD,EAAYE,MAAK,qBAAGT,KAAgBQ,CAAnB,KAAkC,IAD3B,EAGpBE,ECXS,CACb,CACEV,GAAI,EACJC,KAAM,OACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,QACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,OACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,SACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,QACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,SACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,OACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,QACNU,WAAY,GAEd,CACEX,GAAI,EACJC,KAAM,SACNU,WAAY,IDjCoBC,KAAI,SAACC,GACvC,IAAMC,EAAWR,EACfS,EAAsBF,EAAQF,aAC3B,KACCK,EAAOV,EAAkBW,EAAiBH,EAAST,UAAY,KAErE,OAAO,2BACFQ,GADL,IAEEC,WACAI,MAAOF,GAEV,IAEYG,EAAM,WACjB,MAAoDC,mBAAS,MAA7D,mBAAOC,EAAP,KAA2BC,EAA3B,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAoDJ,mBAAS,IAA7D,mBAAOK,EAAP,KAA2BC,EAA3B,KAaMC,EAAiD,OAAvBN,EAC5BX,EAASkB,QAAO,SAAAf,GAAO,OAAIA,EAAQK,MAAMlB,KAAOqB,EAAmBrB,EAA5C,IACvBU,EAEEmB,EAA0C,KAAVN,EAClCI,EAAwBC,QAAO,SAACf,GAChC,IAAMiB,EAAwBjB,EAAQZ,KAAK8B,cACrCC,EAAkBT,EAAMQ,cAAcE,OAE5C,OACEH,EAAsBI,SAASF,EAClC,IACCL,EAEEQ,EAAiBV,EAAmBW,OAAS,EAC/CP,EAA8BD,QAAO,SAAAf,GAAO,OAC5CY,EAAmBS,SAASrB,EAAQC,SAASd,GADD,IAE5C6B,EAEJ,OACE,qBAAKQ,UAAU,UAAf,SACE,sBAAKA,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,gCAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,QAAf,UACE,mBAAGA,UAAU,gBAAb,qBAEA,oBAAGA,UAAU,kCAAb,UACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAWE,IAAW,CACpB,YAAoC,OAAvBlB,IAEfmB,QAAS,kBAAMlB,EAAsB,KAA5B,EANX,iBAWCL,EAAgBL,KAAI,SAAAI,GAAI,OACvB,mBACE,UAAQ,aACRsB,KAAK,KACLD,UAAWE,IAAW,CACpB,YAAavB,EAAKf,QAAL,OAAcoB,QAAd,IAAcA,OAAd,EAAcA,EAAoBpB,QAGjDuC,QAAS,kBAAMlB,EAAsBN,EAA5B,EAPX,SASGA,EAAKf,MAHDe,EAAKhB,GAPW,OAgB3B,qBAAKqC,UAAU,cAAf,SACE,oBAAGA,UAAU,yCAAb,UACE,uBACE,UAAQ,cACRI,KAAK,OACLJ,UAAU,QACVK,YAAY,SACZC,MAAOpB,EACPqB,SAAU,SAAAC,GAAK,OAAIrB,EAASqB,EAAMC,OAAOH,MAA1B,IAGjB,sBAAMN,UAAU,eAAhB,SACE,mBAAGA,UAAU,gBAAgB,cAAY,YAGzCd,GACA,sBAAMc,UAAU,gBAAhB,SAEE,wBACE,UAAQ,cACRI,KAAK,SACLJ,UAAU,SACVG,QAAS,kBAAMhB,EAAS,GAAf,WAOnB,sBAAKa,UAAU,gCAAf,UACE,mBACEC,KAAK,KACL,UAAQ,gBACRD,UAAWE,IAAW,yBAA0B,CAC9C,cAA6C,IAA9Bd,EAAmBW,SAEpCI,QAAS,kBAAMd,EAAsB,GAA5B,EANX,iBAWCX,EAAqBH,KAAI,SAAAE,GAAQ,OAChC,mBAEE,UAAQ,WACRuB,UAAWE,IAAW,mBAAoB,CACxC,UAAWd,EAAmBS,SAASpB,EAASd,MAElDsC,KAAK,KACLE,QAAS,kBA9GOxC,EA8GuBc,EAASd,GA9G1B0B,GAAsB,SAAAqB,GAAO,4BAC9DA,GAD8D,CAEjE/C,GAFiE,IAAnC,IAAAA,CA8GP,EAPX,SASGc,EAASX,OARLW,EAASd,GAFgB,OAgBpC,qBAAKqC,UAAU,cAAf,SACE,mBACE,UAAQ,iBACRC,KAAK,KACLD,UAAU,0CACVG,QAAS,kBAhIrBlB,EAAsB,MACtBE,EAAS,SACTE,EAAsB,GA8HD,EAJX,sCAYN,qBAAKW,UAAU,sBAAf,SACGF,EAAeC,OAAS,EAErB,wBACE,UAAQ,eACRC,UAAU,0CAFZ,UAIE,gCACE,+BACE,6BACE,uBAAMA,UAAU,8BAAhB,eAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,yBAMxC,6BACE,uBAAMA,UAAU,8BAAhB,oBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBACE,UAAQ,WACRA,UAAU,8BAOpB,6BACE,uBAAMA,UAAU,8BAAhB,qBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,4BAMxC,6BACE,uBAAMA,UAAU,8BAAhB,iBAGE,mBAAGC,KAAK,KAAR,SACE,sBAAMD,UAAU,OAAhB,SACE,mBAAG,UAAQ,WAAWA,UAAU,8BAQ5C,gCACGF,EAAevB,KAAI,SAAAC,GAAO,OACzB,qBAAI,UAAQ,UAAZ,UACE,oBAAIwB,UAAU,uBAAuB,UAAQ,YAA7C,SACGxB,EAAQb,KAGX,oBAAI,UAAQ,cAAZ,SAA2Ba,EAAQZ,OACnC,oBAAI,UAAQ,kBAAZ,mBAAkCY,EAAQC,SAASV,KAAnD,cAA6DS,EAAQC,SAASX,SAE9E,oBACE,UAAQ,cACRkC,UAAWE,IAAW,CACpB,gBAAuC,MAAtB1B,EAAQK,MAAMhB,IAC/B,kBAAyC,MAAtBW,EAAQK,MAAMhB,MAJrC,SAOGW,EAAQK,MAAMjB,SAfQY,EAAQb,GADV,SAwB/B,mBAAG,UAAQ,oBAAX,0DAQb,EE7PDgD,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,Q","file":"static/js/main.305c1dd6.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport classNames from 'classnames';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst findByIdFromArray = (searchArray, searchedId) => (\n  searchArray.find(({ id }) => id === searchedId) || null);\n\nconst products = productsFromServer.map((product) => {\n  const category = findByIdFromArray(\n    categoriesFromServer, product.categoryId,\n  ) || null;\n  const user = findByIdFromArray(usersFromServer, category.ownerId) || null;\n\n  return {\n    ...product,\n    category,\n    owner: user,\n  };\n});\n\nexport const App = () => {\n  const [selectedUserFilter, setSelectedUserFilter] = useState(null);\n  const [query, setQuery] = useState('');\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const handleReset = () => {\n    setSelectedUserFilter(null);\n    setQuery('');\n    setSelectedCategories([]);\n  };\n\n  const handleCategorySelection = id => setSelectedCategories(current => [\n    ...current,\n    id,\n  ]);\n\n  const productsFilteredByOwner = selectedUserFilter !== null\n    ? products.filter(product => product.owner.id === selectedUserFilter.id)\n    : products;\n\n  const productsFilteredByProductName = query !== ''\n    ? productsFilteredByOwner.filter((product) => {\n      const normalizedProductName = product.name.toLowerCase();\n      const normalizedInput = query.toLowerCase().trim();\n\n      return (\n        normalizedProductName.includes(normalizedInput));\n    })\n    : productsFilteredByOwner;\n\n  const productsToShow = selectedCategories.length > 0\n    ? productsFilteredByProductName.filter(product => (\n      selectedCategories.includes(product.category.id)))\n    : productsFilteredByProductName;\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={classNames({\n                  'is-active': selectedUserFilter === null,\n                })}\n                onClick={() => setSelectedUserFilter(null)}\n              >\n                All\n              </a>\n\n              {usersFromServer.map(user => (\n                <a\n                  data-cy=\"FilterUser\"\n                  href=\"#/\"\n                  className={classNames({\n                    'is-active': user.name === selectedUserFilter?.name,\n                  })}\n                  key={user.id}\n                  onClick={() => setSelectedUserFilter(user)}\n                >\n                  {user.name}\n                </a>\n              ))}\n\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={event => setQuery(event.target.value)}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {!query || (\n                  <span className=\"icon is-right\">\n                    {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                className={classNames('button is-success mr-6', {\n                  'is-outlined': selectedCategories.length !== 0,\n                })}\n                onClick={() => setSelectedCategories([])}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map(category => (\n                <a\n                  key={category.id}\n                  data-cy=\"Category\"\n                  className={classNames('button mr-2 my-1', {\n                    'is-info': selectedCategories.includes(category.id),\n                  })}\n                  href=\"#/\"\n                  onClick={() => handleCategorySelection(category.id)}\n                >\n                  {category.title}\n                </a>\n              ))}\n\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={() => handleReset()}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {productsToShow.length > 0\n            ? (\n              <table\n                data-cy=\"ProductTable\"\n                className=\"table is-striped is-narrow is-fullwidth\"\n              >\n                <thead>\n                  <tr>\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        ID\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Product\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i\n                              data-cy=\"SortIcon\"\n                              className=\"fas fa-sort-down\"\n                            />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        Category\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort-up\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n\n                    <th>\n                      <span className=\"is-flex is-flex-wrap-nowrap\">\n                        User\n\n                        <a href=\"#/\">\n                          <span className=\"icon\">\n                            <i data-cy=\"SortIcon\" className=\"fas fa-sort\" />\n                          </span>\n                        </a>\n                      </span>\n                    </th>\n                  </tr>\n                </thead>\n\n                <tbody>\n                  {productsToShow.map(product => (\n                    <tr data-cy=\"Product\" key={product.id}>\n                      <td className=\"has-text-weight-bold\" data-cy=\"ProductId\">\n                        {product.id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">{product.name}</td>\n                      <td data-cy=\"ProductCategory\">{`${product.category.icon} - ${product.category.title}`}</td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={classNames({\n                          'has-text-link': product.owner.sex === 'm',\n                          'has-text-danger': product.owner.sex === 'f',\n                        })}\n                      >\n                        {product.owner.name}\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </table>\n            )\n            : (\n              <p data-cy=\"NoMatchingMessage\">\n                No products matching selected criteria\n              </p>\n            )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}